{"config":{"lang":["vi"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"M\u1ed9t note nh\u1ecf c\u1ee7a IT bi\u1ebft code","text":""},{"location":"aws-cli/","title":"Aws cli","text":""},{"location":"aws-cli/#download-aws-cli","title":"Download AWS CLI","text":"<p>Download Link</p>"},{"location":"aws-cli/#to-login-aws-credential","title":"To login AWS Credential","text":"<pre><code>aws configure\n\nregion: ap-southeast-1\ntype: json\n</code></pre>"},{"location":"aws-cli/#cli-auto-prompt","title":"CLI Auto Prompt","text":"<p><code>aws --cli-auto-prompt</code></p>"},{"location":"aws-cli/#ec2","title":"EC2","text":"<pre><code>aws ec2 describe-instances --output table --region ap-southeast-1\n</code></pre>"},{"location":"cicd-helloword/","title":"Cicd helloword","text":""},{"location":"cicd-helloword/#github-cicd","title":"Github CICD","text":""},{"location":"cicd-helloword/#github-workflow","title":"Github Workflow","text":""},{"location":"cicd-helloword/#path-of-directory","title":"Path of directory","text":"<pre><code>.github\n|-workflows\n|-   name_of_cicd_file.yml\n</code></pre>"},{"location":"cicd-helloword/#structure","title":"Structure","text":"<pre><code>name: Hello CI/CD\n\non:\n  push:\n    paths:\n      - 'app/**'  # Run only when files in the 'app' folder change\n\njobs:\n  say-hello:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n\n      - name: Print a message\n        run: echo \"Hello, CI/CD! \ud83d\ude80 - Only runs when files in 'app/' change.\"\n</code></pre>"},{"location":"docker-cheatsheet/","title":"Cheatsheet","text":""},{"location":"docker-cheatsheet/#volume","title":"Volume","text":""},{"location":"docker-cheatsheet/#list-volume","title":"List Volume","text":"<pre><code>docker volume ls\n</code></pre>"},{"location":"docker-cheatsheet/#create-volume","title":"Create Volume","text":"<pre><code>docker volume create name_volume\n</code></pre>"},{"location":"docker-cheatsheet/#remove-all-unused-local-volumes","title":"Remove all unused local volumes","text":"<pre><code>docker volume prune\n</code></pre>"},{"location":"docker-cheatsheet/#backup-my_volume-to-my_backuptar","title":"Backup my_volume to my_backup.tar","text":"<pre><code>docker run --rm --volume my_volume:/mount_bkp --volume $(pwd):/backup ubuntu tar cvf /backup/my_backup.tar /mount_bkp\n</code></pre>"},{"location":"docker-cheatsheet/#restore-my_backuptare-to-my_volume","title":"Restore my_backup.tare to my_volume","text":"<pre><code>docker run --rm --volume my_volume:/mount_bkp --volume $(pwd):/backup ubuntu tar xvf /backup/my_backup.tar -C /mount_bkp --strip 1\n</code></pre>"},{"location":"docker-cheatsheet/#container","title":"Container","text":""},{"location":"docker-cheatsheet/#remove-all-container","title":"Remove all container","text":"<pre><code>docker rm $(docker ps -a -q)\n</code></pre>"},{"location":"docker/","title":"Install","text":""},{"location":"docker/#install-docker-engine-for-ubuntu","title":"Install Docker Engine for Ubuntu","text":"<ol> <li>Make bash file to run with content inside:</li> </ol> <pre><code># \n\n# Add Docker's official GPG key:\nsudo apt-get update\nsudo apt-get install ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n\n# Add the repository to Apt sources:\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo \"$VERSION_CODENAME\") stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\nsudo apt-get update\n\n</code></pre> <ol> <li>Change mode with execute permission</li> </ol> <pre><code>chmod +x file_name.sh\n</code></pre> <ol> <li>Run bash file</li> </ol> <pre><code>sudo ./file_name.sh\n</code></pre> <ol> <li>Install docker component from apt</li> </ol> <pre><code>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre> <ol> <li>Test</li> </ol> <pre><code>docker run -d -p 8080:80 docker/welcome-to-docker\n\n##open brower and navigate to ip_address:8080 and successful!\n</code></pre>"},{"location":"golang-goroutine/","title":"Golang goroutine","text":""},{"location":"golang-goroutine/#goroutine","title":"Goroutine","text":"<ul> <li>Normally, Go will run in order (Step by Step), but with Goroutine, functios will run concurrently</li> </ul> <pre><code>package main\n\nimport (\n    \"fmt\"\n    \"time\"\n)\n\nfunc printMessage() {\n    fmt.Println(\"Hello from Goroutine!\")\n}\n\nfunc main() {\n    go printMessage() // Runs in a separate Goroutine\n    fmt.Println(\"Main function\") // Runs immediately\n\n    time.Sleep(time.Second) // Wait to see Goroutine output\n}\n</code></pre> <ul> <li>To make sure Goroutine function done before programe exit, we will use sync.Waitgroup</li> </ul> <pre><code>package main\n\nimport (\n    \"fmt\"\n    \"sync\"\n)\n\nfunc printMessage(wg *sync.WaitGroup) {\n    defer wg.Done() // Mark this Goroutine as done\n    fmt.Println(\"Hello from Goroutine!\")\n}\n\nfunc main() {\n    var wg sync.WaitGroup // Create a WaitGroup\n    wg.Add(1)             // Tell WaitGroup to wait for 1 Goroutine\n\n    go printMessage(&amp;wg) // Start Goroutine\n\n    wg.Wait() // Wait until all Goroutines in WaitGroup are done\n}\n</code></pre>"},{"location":"golang-goroutine/#syncwaitgroup","title":"sync.WaitGroup","text":"<ul> <li>This struct belong to <code>sync</code> package</li> <li>It acts like a counter:</li> <li> <ul> <li>Add(n): Increase the counter when starting Goroutine</li> </ul> </li> <li> <ul> <li>Done(): Decreate the counter when a Goroutine finishes</li> </ul> </li> <li> <ul> <li>Wait(): Block execution until the counter reaches zero </li> </ul> </li> </ul>"},{"location":"golang-goroutine/#channels-in-go","title":"Channels in Go","text":"<ul> <li>Channel is a way help Goroutine can communicate safely. Allows sending and receiving data between Goroutine</li> </ul> <pre><code>ch := make(chan string)\n</code></pre> <p>Example</p> <pre><code>packagge main\nimport \"fmt\"\nfunc main() {\n    ch := make(chan string) //Create a channel\n\n    go func(){\n        ch &lt;- \"Hello form Goroutine\" //Send data to channel\n    }()\n\n    message := &lt;-ch // Receive data from channel\n    fmt.Print(message)\n}\n</code></pre>"},{"location":"golang-goroutine/#buffered-and-unbuffed-on-channel","title":"Buffered and Unbuffed on Channel","text":"<ul> <li>If you declare a channel without specify the capacity it can store, default buffer = 1 = no buffer. Channel only receive data and send 1 value and block other command input</li> </ul> <pre><code>ch := make(chan string) //Un-buffered\nch := make(chan string, 2) //Buffered = 2\n</code></pre>"},{"location":"golang-goroutine/#close-chanell","title":"Close chanell","text":"<p><code>close(ch)</code></p>"},{"location":"golang-goroutine/#muliple-channels-select-statement","title":"Muliple Channels (Select Statement)","text":""},{"location":"markdown/","title":"Markdown","text":""},{"location":"markdown/#header","title":"Header","text":"<pre><code># h1\n## h2\n### h3\n.........\n</code></pre>"},{"location":"markdown/#bold-highlight","title":"Bold, Highlight","text":"<pre><code>*Italic*\n**Bold**\n***Italic &amp; Bold***\n</code></pre>"},{"location":"markdown/#inline-code","title":"Inline code","text":"<pre><code>`inline code`\n</code></pre>"},{"location":"markdown/#code-block","title":"Code block","text":"<pre><code>``` Code blog\n     In here\n\\```     \n</code></pre>"},{"location":"markdown/#link-image","title":"Link, Image","text":""},{"location":"markdown/#link","title":"Link","text":"<pre><code>[title](https://.../~)\n</code></pre>"},{"location":"markdown/#image","title":"Image","text":"<pre><code># With link use http, or use can point to image on local\n![alt](https://.../~)\n</code></pre>"},{"location":"markdown/#list","title":"List","text":""},{"location":"markdown/#with-symbol","title":"With symbol","text":"<pre><code>* item 1\n** sub item 1.1\n* item 2\n</code></pre>"},{"location":"markdown/#with-number","title":"With number","text":"<pre><code>1. item 1\n2. item 2\n3. item 3\n</code></pre>"},{"location":"markdown/#horizonal-rules","title":"Horizonal Rules","text":"<pre><code>***\nContent\n</code></pre>"},{"location":"markdown/#blockquotes","title":"Blockquotes","text":"<pre><code>&gt; content\n</code></pre>"},{"location":"source_document/","title":"Document","text":""},{"location":"source_document/#nhung-khoa-hoc-mien-phi-nhung-chat-luong","title":"Nh\u1eefng kho\u00e1 h\u1ecdc mi\u1ec5n ph\u00ed nh\u01b0ng ch\u1ea5t l\u01b0\u1ee3ng","text":"<ul> <li>DevOpsEdu.vn</li> <li>EroyDevOps.Tech</li> <li>Anh Vi\u1ec7t Tr\u1ea7n AWS</li> <li>DevOpsVN</li> <li>MrCloudBook</li> <li>DevOps Hobbies</li> <li>Azure - CLoudlee</li> </ul>"},{"location":"swarm/","title":"Docker Swarm","text":"<p>Introduction:</p> <p>Docker Swarm l\u00e0 m\u1ed9t c\u00f4ng c\u1ee5 (c\u00f3 ph\u1ea3i c\u00f4ng c\u1ee5 kh\u00f4ng ta) \u0111\u01b0\u1ee3c Docker \u0111\u1ebb ra (nh\u01b0ng m\u00e0 b\u00e2y gi\u1edd b\u00e1n \u0111\u1ec3 t\u1eadp trung ph\u00e1t tri\u1ec3n m\u1ea3ng kh\u00e1c r\u1ed3i). N\u00f3 cho ph\u00e9p b\u1ea1n qu\u1ea3n l\u00ed v\u00e0 scale c\u00e1c container c\u1ee7a docker tr\u00ean nhi\u1ec1u node. Hi\u1ec7n t\u1ea1i th\u00ec n\u00f3 \u0111\u00e3 l\u1ed7i th\u1eddi so v\u1edbi K8s, nh\u01b0ng n\u00f3 gi\u00fap b\u1ea1n h\u00ecnh dung \u0111\u01b0\u1ee3c b\u1ee9c tranh t\u1ed5ng th\u1ec3 c\u1ee7a microservice. G\u00e9t g\u00f4</p> <p>Prerequisites: Tr\u01b0\u1edbc khi \u0111\u1ebfn v\u1edbi Docker Swarm th\u00ec tui mu\u1ed1n ch\u1eafc b\u1ea1n \u0111\u00e3: - C\u00f3 bi\u1ebft s\u01a1 s\u01a1 v\u1ec1 Docker - C\u00f3 2 m\u00e1y (\u01b0u ti\u00ean m\u00e1y \u1ea3o) - 1 m\u00e1y \u0111\u1ec3 l\u00e0m Node manager v\u00e0 1 \u0111\u1ec3 l\u00e0m node worker. C\u1ea3 2 \u0111\u1ec1u ph\u1ea3i \u0111\u01b0\u1ee3c c\u00e0i docker</p> <p>Setting Up Docker Swarm:</p> <ol> <li>Setup docker Swarm tr\u00ean Node \u0111\u1ea7u ti\u00ean, node n\u00e0y s\u1ebd tr\u1edf th\u00e0nh Node Manager nh\u00e9</li> </ol> <pre><code>docker swarm init --advertise-addr &lt;MANAGER_NODE_IP&gt;\n</code></pre>  \ud83d\udca1  To check token docker swarm join-token manager   <ol> <li>Join node worker v\u00e0o swarm c\u1ee7a node manager v\u1eeba t\u1ea1o</li> </ol> <p>On each worker node, run the following command (replace\u00a0<code>&lt;MANAGER_NODE_IP&gt;</code>\u00a0with the IP address of the manager node):</p> <pre><code>docker swarm join - token &lt;TOKEN&gt; &lt;MANAGER_NODE_IP&gt;:2377\n</code></pre> <ol> <li>Verify the Swarm status:</li> </ol> <p>On the manager node, run:</p> <pre><code>docker node ls\n</code></pre> <p>Deploying and Managing Services in Docker Swarm:</p> <p>Deploying a service:</p> <pre><code>docker service create - name my-nginx - replicas 3 -p 80:80 nginx\n</code></pre> <p>Listing services:</p> <pre><code>docker service ls\n</code></pre> <p>Scaling a service:</p> <pre><code>docker service scale my-nginx=5\n</code></pre> <p>Updating a service:</p> <pre><code>docker service update - image nginx:latest my-nginx\n</code></pre> <p>Inspecting a service:</p> <pre><code>docker service inspect my-nginx\n</code></pre> <p>Removing a service:</p> <pre><code>docker service rm my-nginx\n</code></pre> <p>Conclusion:</p> <p>Docker Swarm provides a simple yet powerful solution for orchestrating containers in a distributed environment. With the ability to deploy, scale, update, and manage services across multiple nodes, Docker Swarm empowers developers and system administrators to build resilient and scalable applications.</p> <p>Remember to experiment and explore additional features such as service rolling updates, service rollback, service constraints, and more. Happy container orchestration with Docker Swarm!</p>"},{"location":"terraform-01/","title":"Terraform 01","text":""},{"location":"terraform-01/#why-we-need-terraform","title":"Why we need Terraform?","text":"<p>Normally, When we need build infrastructure on Cloud, We will access that portal to control everything. But it is getting more and more big and difficult to manage it anh Terraform guy come next to you and told \"Let me\" \ud83d\udc36</p>"},{"location":"terraform-01/#_1","title":"Terraform 01","text":""},{"location":"terraform-01/#main-commands-we-often-face","title":"Main commands we often face","text":"<pre><code>terraform init\nterrform plan\nterraform apply\n</code></pre> <p>Terraform will use tf to execute the code inline</p>"},{"location":"terraform-01/#structure-of-terraform","title":"Structure of Terraform","text":"<ol> <li>Configuration file</li> <li>This is .tf file or tf.json, include IaC</li> <li>It describle provide, resource, module,.. Example</li> </ol> <pre><code>provider \"azurerm\" {\n    feature{}\n}\nresource \"azurerm_resourcegroup\" \"example\" {\n    name = \"lab_resource\"\n    location = \"East US\"\n}\n\n</code></pre> <ol> <li>Providers</li> <li>This is public cloud you use for infrastructure like Azure, AWS or GCP,...</li> </ol> <pre><code>providers \"aws\"\nproviders \"azurerm\" #Azure Resource Manager\nproviders \"google\"\nproviders \"kubernestes\"\n</code></pre> <ol> <li>Resources</li> <li>Represent for infrastructure component such as VM, DB, VPC,...</li> </ol> <pre><code>resource \"azurerm_virtual_network\" \"example\" {\n  name                = \"example-network\"\n  location            = azurerm_resource_group.example.location\n  resource_group_name = azurerm_resource_group.example.name\n  address_space       = [\"10.0.0.0/16\"]\n}\n</code></pre> <ol> <li>Module</li> <li>To reuse and restrict make a mistake, module born to organize and manage better</li> </ol> <pre><code>module \"network\" {\n  source = \"./modules/network\"\n  vnet_name = \"my-vnet\"\n  location = \"East US\"\n}\n</code></pre> <ol> <li>State</li> <li>Using to monitor the changing and avoid conflic when we apply new change. It's storge status of infrastrutre on <code>terraform.tsstate</code></li> <li>Can local storage or storage on cloud</li> <li>Terraform CLI</li> </ol>"},{"location":"terraform-instructure-configfile/","title":"Terraform instructure configfile","text":""},{"location":"terraform-instructure-configfile/#main-component-in-config-file-of-terraform","title":"Main component in config file of Terraform","text":""},{"location":"terraform-instructure-configfile/#example-about-config","title":"Example about config","text":"<pre><code>terraform {\n  required_providers {\n    azurerm = {\n      source  = \"hashicorp/azurerm\"\n      version = \"~&gt; 3.0\"\n    }\n  }\n  backend \"azurerm\" {\n    resource_group_name  = \"terraform-state-rg\"\n    storage_account_name = \"tfstatebackend\"\n    container_name       = \"tfstate\"\n    key                 = \"terraform.tfstate\"\n  }\n}\n\nprovider \"azurerm\" {\n  features {}\n}\n\nresource \"azurerm_resource_group\" \"example\" {\n  name     = \"example-resources\"\n  location = \"East US\"\n}\n\noutput \"resource_group_name\" {\n  value = azurerm_resource_group.example.name\n}\n</code></pre> <ol> <li>Terraform block</li> <li>This block vbalidate require of Terraform like version, provider,...</li> </ol> <pre><code>terraform {\n  required_version = \"&gt;= 1.0.0\"\n  required_providers {\n    aws = {\n      source  = \"hashicorp/aws\"\n      version = \"~&gt; 4.0\"\n    }\n  }\n}\n</code></pre> <ol> <li>Provider block</li> <li>Determine provider will use  ```  provider \"aws\" {   region = \"us-east-1\" }</li> </ol> <pre><code>3. Resource block\n- What action will happen with resource like VM, DB. Creatre, Update or Delete\n```js\nresource \"azurerm_virtual_network\" \"example\" {\n  name                = \"example-network\"\n  location            = azurerm_resource_group.example.location\n  resource_group_name = azurerm_resource_group.example.name\n  address_space       = [\"10.0.0.0/16\"]\n}\n</code></pre> <ol> <li>Varriable block</li> </ol> <pre><code>variable \"region\" {\n  description = \"The AWS region\"\n  type        = string\n  default     = \"us-east-1\"\n}\n</code></pre> <ol> <li>Output block</li> <li>Exported information after done</li> </ol> <pre><code>output \"instance_ip\" {\n  value = aws_instance.example.public_ip\n}\n</code></pre> <ol> <li>Backend block</li> <li>Dertermine location status of terraform saved</li> </ol> <pre><code>terraform {\n  backend \"azurerm\" {\n    resource_group_name  = \"terraform-state-rg\"\n    storage_account_name = \"tfstatebackend\"\n    container_name       = \"tfstate\"\n    key                 = \"terraform.tfstate\"\n  }\n}\n</code></pre>"},{"location":"terraform-instructure-configfile/#structure-of-variabletf","title":"Structure of variable.tf","text":"<pre><code>variable \"location\" {\n  description = \"Azure region\"\n  type        = string\n  default     = \"East US\"\n}\n\nvariable \"vnet_name\" {\n  description = \"Virtual Network Name\"\n  type        = string\n}\n</code></pre>"},{"location":"terraform-instructure-configfile/#standard-structure-of-directory","title":"Standard structure of directory","text":"<pre><code>terraform-project/\n\u2502\u2500\u2500 main.tf            # Calls the module\n\u2502\u2500\u2500 variables.tf       # Variables for the root module\n\u2502\u2500\u2500 outputs.tf         # Outputs from the root module\n\u2502\u2500\u2500 modules/\n\u2502   \u251c\u2500\u2500 network/       # Network module\n\u2502   \u2502   \u251c\u2500\u2500 main.tf\n\u2502   \u2502   \u251c\u2500\u2500 variables.tf\n\u2502   \u2502   \u251c\u2500\u2500 outputs.tf\n\u2502   \u251c\u2500\u2500 compute/       # Compute module (VMs)\n\u2502   \u2502   \u251c\u2500\u2500 main.tf\n\u2502   \u2502   \u251c\u2500\u2500 variables.tf\n\u2502   \u2502   \u251c\u2500\u2500 outputs.tf\n</code></pre>"},{"location":"test/","title":"test page","text":""},{"location":"test/#hihi","title":"hihi","text":""},{"location":"traefik-index/","title":"Traefik","text":""},{"location":"traefik-index/#mot-chut-ve-proxy","title":"M\u1ed9t ch\u00fat v\u1ec1 Proxy","text":"<p>H\u00e3y t\u01b0\u1edfng t\u01b0\u1ee3ng Internet gi\u1ed1ng nh\u01b0 x\u00e3 h\u1ed9i c\u1ee7a ch\u00fang ta v\u1eady, b\u1ea1n \u0111\u1ebfn qu\u00e1n c\u00e0 ph\u00ea v\u00e0 y\u00eau c\u1ea7u m\u1ed9t c\u1ed1c Amely Can\u00f4 th\u00f4ng qua b\u1ea1n nh\u00e2n vi\u00ean ph\u1ee5c v\u1ee5, r\u1ed3i nh\u00e2n vi\u00ean ph\u1ee5c v\u1ee5 nh\u1eadn ghi l\u1ea1i y\u00eau c\u1ea7u sau \u0111\u00f3 chuy\u1ec3n sang cho pha ch\u1ebf. Proxy c\u0169ng gi\u1ed1ng nh\u01b0 v\u1eady, n\u00f3 \u0111\u1ee9ng gi\u1eefa b\u1ea1n v\u00e0 pha ch\u1ebf, ti\u1ebfp nh\u1eadn y\u00eau c\u1ea7u, \u0111\u01b0a y\u00eau c\u1ea7u \u0111\u00f3 v\u00e0o b\u00ean trong \u0111\u1ec3 x\u1eed l\u00ed v\u00e0 tr\u1ea3 l\u1ea1i k\u1ebft qu\u1ea3 cho b\u1ea1n.  Coffee \u2615\ufe0f</p>"},{"location":"traefik-index/#concepts","title":"Concepts","text":"<ul> <li>C\u00e1c kh\u00e1i ni\u1ec7m c\u1ee7a Traefik d\u1ef1a tr\u00ean nh\u1eefng th\u00e0nh ph\u1ea7n bao g\u1ed3m: EntryPoint, Routers, Middlewares v\u00e0 Services</li> <li>C\u00e1c t\u00ednh n\u0103ng ch\u00ednh bao g\u1ed3m c\u00e1c dynamic configuration (t\u1ef1 \u0111\u1ed9ng c\u1ea5u h\u00ecnh), automation service discovery v\u00e0 h\u1ed7 tr\u1ee3 \u0111a giao th\u1ee9c v\u00e0 \u0111a n\u1ec1n t\u1ea3ng <ul> <li>EntryPoints: EntryPoints l\u00e0 \u0111i\u1ec3m \u0111\u1ea7u v\u00e0o c\u1ee7a Traefik - \u0111\u01b0\u1ee3c xem nh\u01b0 c\u1ed5ng ch\u00ednh t\u1eeb b\u00ean ngo\u00e0i \u0111i v\u00e0o. N\u00f3 d\u1ef1a v\u00e0o port v\u00e0 ph\u01b0\u01a1ng th\u1ee9c (UDP hay TCP) m\u00e0 c\u00e1c g\u00f3i tin \u0111\u01b0\u1ee3c g\u1eedi \u0111\u1ebfn v\u00e0 quy\u1ebft \u0111\u1ecbnh c\u00f3 ch\u1ea5p nh\u1eadn forward hay kh\u00f4ng.</li> <li>Routers: Router \u0111\u1ea3m nhi\u1ec7m vai trong k\u1ebft n\u1ed1i c\u00e1c y\u00eau c\u1ea7u \u0111i v\u00e0o \u0111\u1ebfn d\u1ecbch v\u1ee5 b\u00ean trong \u0111\u01b0\u1ee3c y\u00eau c\u1ea7u</li> <li>Middlewares: \u0111i k\u00e8m v\u1edbi router, middleware c\u00f3 th\u1ec3 modify y\u00eau c\u1ea7u \u0111i v\u00e0o ho\u1eb7c ph\u1ea3n h\u1ed3i \u0111i ra tr\u01b0\u1edbc khi g\u1eedi ch\u00fang \u0111\u1ebfn service c\u1ee7a b\u1ea1n</li> <li>Services: c\u00e1c service \u0111\u01b0\u1ee3c tr\u00e1ch nhi\u1ec7m c\u1ea5u h\u00ecnh c\u00e1ch c\u00e1c service th\u1eadt s\u1ef1 (nh\u01b0 c\u00e1c container c\u1ee7a docker) handle nh\u1eefng request</li> </ul> </li> </ul>"},{"location":"traefik-index/#edge-router","title":"Edge Router","text":"<ul> <li>Traefik l\u00e0 m\u1ed9t Edge Router, n\u00f3 l\u00e0 c\u00e1nh c\u1eeda ng\u0103n c\u00e1ch b\u00ean ngo\u00e0i v\u00e0 \u0111\u1ecbnh tuy\u1ebfn v\u00e0o trong h\u1ea1 t\u1ea7ng c\u1ee7a b\u1ea1n, c\u00f3 th\u1ec3 l\u00e0 m\u00e1y \u1ea3o, microservice nh\u01b0 Docker Container,\u2026</li> <li>D\u1ef1a v\u00e0o path, host, header c\u1ee7a request m\u00e0 ch\u00fang quy\u1ebft \u0111\u1ecbnh s\u1ebd \u0111\u1ecbnh tuy\u1ebfn nh\u01b0 th\u1ebf n\u00e0o</li> </ul>"},{"location":"traefik-index/#auto-service-discovery","title":"Auto Service Discovery","text":"<ul> <li>Th\u00f4ng th\u01b0\u1eddng, c\u00e1c proxy hay nh\u01b0 \u1edf tr\u00ean l\u00e0 edge router c\u1ea7n file c\u1ea5u h\u00ecnh \u0111\u1ec3 ch\u00fang c\u00f3 th\u1ec3 bi\u1ebft c\u00e1ch \u0111\u1ecbnh tuy\u1ebfn nh\u01b0 th\u1ebf n\u00e0o, c\u00f3 nh\u1eefng service n\u00e0o n\u1eb1m b\u00ean trong nh\u01b0ng Traefik th\u00ec kh\u00e1c, n\u00f3 c\u00f3 th\u1ec3 t\u1ef1 \u0111\u1ed9ng nh\u1eadn bi\u1ebft c\u00e1c server \u0111\u1ec3 c\u1eadp nh\u1eadt b\u1ea3ng \u0111\u1ecbnh tuy\u1ebfn</li> <li>D\u1ef1a v\u00e0o c\u00e1c service c\u1ee7a b\u1ea1n v\u00e0 th\u00f4ng tin m\u00e0 b\u1ea1n c\u1ea5u h\u00ecnh m\u00e0 Traefik c\u00f3 th\u1ec3 h\u00ecnh dung \u0111\u01b0\u1ee3c c\u00e1ch \u0111\u1eb7c \u0111i\u1ec3m c\u1ee7a y\u00eau c\u1ea7u m\u00e0 service c\u00f3 th\u1ec3 handle</li> </ul> <ul> <li>N\u00f3 c\u00f3 ngh\u0129a l\u00e0 khi m\u1ed9t service \u0111\u01b0\u1ee3c deploy, Traefik s\u1ebd t\u1ef1 \u0111\u1ed9ng ph\u00e1t hi\u1ec7n ngay l\u1eadp t\u1ee9c r\u1ed3i sau \u0111\u00f3 update routing table, real time lu\u00f4n :) (*\u0111\u00e1 nginx ra chu\u1ed3ng g\u00e0 th\u00f4i), t\u01b0\u01a1ng t\u1ef1 khi service \u0111\u01b0\u1ee3c remove ra th\u00ec n\u00f3 c\u0169ng remove c\u00e1c th\u1ee9 li\u00ean quan. Ch\u00fang ta kh\u00f4ng c\u1ea7n ph\u1ea3i l\u00e0m g\u00ec c\u1ea3, tr\u1eeb khi mu\u1ed1n can thi\u1ec7p v\u00e0o.</li> </ul> <p>L\u01b0u \u00fd, traefik c\u00f3 2 lo\u1ea1i c\u1ea5u h\u00ecnh l\u1ea1i Fix c\u1ee9ng v\u00e0 Dynamic, fix c\u1ee9ng c\u00f3 ngh\u0129a l\u00e0 \u0111\u00e3 start traefik l\u00ean r\u1ed3i th\u00ec kh\u00f3 s\u1eeda (n\u1ebfu mu\u1ed1n s\u1eeda th\u00ec s\u1eeda file YAML ho\u1eb7c TOML), c\u00f2n Dynamic th\u00ec s\u1eeda v\u00f4 t\u01b0 </p>"},{"location":"traefik-index/#kien-truc-chi-tiet","title":"Ki\u1ebfn tr\u00fac chi ti\u1ebft","text":"<ul> <li>H\u00e3y c\u00f9ng qua s\u00e1t v\u1ec1 ki\u1ebfn tr\u00fac c\u1ee7a Traefik \u1edf h\u00ecnh b\u00ean d\u01b0\u1edbi</li> </ul> <ul> <li>\u0110\u1ea7u ti\u00ean, ch\u00fang ta s\u1ebd \u0111\u1ecbnh ngh\u0129a c\u00e1c entrypoint (entrypoint c\u00f3 th\u1ec3 h\u00ecnh dung nh\u01b0 c\u00e1i c\u1ed5ng \u0111i v\u00e0o, port m\u1ea5y m\u1ea5y nh\u01b0 80 ho\u1eb7c 433 bla bla)  C\u00e1c routers ph\u00e2n t\u00edch c\u00e1c request \u0111i v\u00e0o v\u00e0 \u0111\u1ed1i chi\u1ebfu v\u1edbi c\u00e1c rule \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a tr\u01b0\u1edbc, n\u00f3 s\u1ebd h\u1ecfi xem \"Request n\u00e0y d\u00f9ng host n\u00e0o, path l\u00e0 g\u00ec v\u00e0 header ra sao.  V\u00e0 chuy\u1ec3n ch\u00fang \u0111\u1ebfn c\u00e1c service y\u00eau c\u1ea7u. L\u01b0u \u00fd, n\u1ebfu Middlewares xu\u1ea5t hi\u1ec7n, n\u00f3 s\u1ebd n\u1eb1m gi\u1eefa v\u00e0 can thi\u1ec7p v\u00e0o gi\u1eefa routers v\u00e0 service, ch\u1eb3ng h\u1ea1n nh\u01b0 b\u1eaft ch\u00fang ta nh\u1eadp m\u1eadt kh\u1ea9u/ user tr\u01b0\u1edbc khi \u0111\u01b0\u1ee3c th\u00f4ng qua</li> </ul>"},{"location":"traefik-index/#nhiem-vu-cu-the-cua-cac-thanh-phan-co-the-trung-voi-concepts-nhu-oc-lai-cho-nho-he","title":"Nhi\u1ec7m v\u1ee5 c\u1ee5 th\u1ec3 c\u1ee7a c\u00e1c th\u00e0nh ph\u1ea7n (C\u00f3 th\u1ec3 tr\u00f9ng v\u1edbi concepts nh\u01b0 \u0111\u1ecdc l\u1ea1i cho nh\u1edb h\u00e9)","text":"<ol> <li>Providers: \u0111\u1ecbnh ngh\u0129a m\u1ea1ng m\u1ebdo, h\u1ea1 t\u1ea7ng ch\u00fang ta \u0111ang d\u00f9ng l\u00e0 g\u00ec: Docker? Swarm? K8s,..</li> <li>EntryPoints: l\u1eafng nghe traffic \u0111i v\u00e0o (port n\u00e0o ?)</li> <li>Router: ph\u00e2n t\u00edch request (host, path, headers, SSL,...?)</li> <li>Services: forward y\u00eau c\u1ea7u t\u1edbi service (loadbalacing hay server n\u00e0o \u0111\u00f3 ?)</li> <li>Middleware: update request ho\u1eb7c \u0111\u01b0a ra quy\u1ebft \u0111\u1ecbnh d\u1ef1a tr\u00ean request. D\u1ec5 hi\u1ec3u h\u01a1n th\u00ec n\u00f3 n\u1eb1m gi\u1eefa service v\u00e0 router: ch\u1eb7n l\u01b0u l\u01b0\u1ee3ng l\u1ea1i v\u00e0 h\u1ecfi: m\u00e0y l\u00e0 th\u00e8n n\u00e0o? \u0111\u1ee9a CCCD ra \u0111\u00e2y, header \u0111\u00e2u ? l\u00e1o nh\u00e1o l\u00e0 tau limit rate l\u1ea1i nh\u00e9, ki\u1ec3u v\u1eady =)))</li> </ol>"},{"location":"traefik-index/#entrypoints","title":"EntryPoints","text":"<ul> <li>N\u00f3 l\u00e0 c\u1eeda ng\u00f5 h\u1ee9ng l\u01b0u l\u01b0\u1ee3ng t\u1eeb ngo\u00e0i \u0111i v\u00e0o, l\u1eafng nghe l\u01b0u l\u01b0\u1ee3ng TCP/UDP, port bao nhi\u00eau</li> </ul>"},{"location":"traefik-index/#cau-hinh-mau","title":"C\u1ea5u h\u00ecnh m\u1eabu","text":"<pre><code>## Static configuration\n--entryPoints.web.address=:80\n--entryPoints.websecure.address=:443\n</code></pre> <ul> <li>\u1ede tr\u00ean 2 entrypoint \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a: web v\u00e0 websecure <p>C\u00f2n nhi\u1ec1u \u0111\u1ecbnh ngh\u0129a l\u1eafm m\u00e0 \u00edt d\u00f9ng, m\u1ecdi ng\u01b0\u1eddi mu\u1ed1n t\u00ecm hi\u1ec3u th\u00ec v\u00e0o docs ch\u00ednh ch\u1ee7 nhe Traefik Document - EntryPoint</p> </li> </ul>"},{"location":"traefik-index/#routers","title":"Routers","text":"<p> * M\u1ed9t router ch\u1ecbu tr\u00e1ch nhi\u1ec7m k\u1ebft n\u1ed1i request \u0111i v\u00e0o th\u00f4ng qua EntryPoint t\u1edbi service v\u00e0 g\u1ecdi middleware trung gian (n\u1ebfu c\u00f3) m\u00e0 ch\u00fang c\u00f3 th\u1ec3 handle ph\u1ee5 thu\u1ed9c v\u00e0o rule (host, path, ...) </p>"},{"location":"traefik-index/#cau-hinh-mau_1","title":"C\u1ea5u h\u00ecnh m\u1eabu","text":"<pre><code>## Static configuration\n- \"traefik.http.routers.traefik.rule=Rule_n\u00e0o_\u0111\u00f3('\u0110i\u1ec1u ki\u1ec7n')\n## - traefik.http.routers.traefik.rule=Host(`tanodd.hihi`) - router n\u00e0y nh\u1eadn host tanodd.hihi v\u00e0 forward ti\u1ebfp \n</code></pre> Rules Description Header(<code>key</code>, <code>value</code>) Matches requests containing a header named key set to value. HeaderRegexp(<code>key</code>, <code>regexp</code>) Matches requests containing a header named key matching regexp Host(<code>domain</code>) Matches requests host set to domain. HostRegexp(<code>regexp</code>) Matches requests host matching regexp. Method(<code>method</code>) Matches requests method set to method. Path(<code>path</code>) Matches requests path set to path. PathPrefix(<code>prefix</code>) Matches requests path prefix set to prefix. PathRegexp(<code>regexp</code>) Matches request path using regexp. Query(<code>key</code>, <code>value</code>) Matches requests query parameters named key set to value. QueryRegexp(<code>key</code>, <code>regexp</code>) Matches requests query parameters named key matching regexp. ClientIP(<code>ip</code>) Matches requests client IP using ip. It accepts IPv4, IPv6 and CIDR formats."},{"location":"traefik-index/#services","title":"Services","text":""},{"location":"traefik-index/#cau-hinh-mau_2","title":"C\u1ea5u h\u00ecnh m\u1eabu","text":"<pre><code> - \"traefik.http.services.traefik.loadbalancer.server.port=8080\"\n</code></pre> <p>Service n\u00e0y s\u1ebd forward l\u01b0u l\u01b0\u1ee3ng \u0111\u1ebfn port 8000 trong internal * Ngo\u00e0i ra, ta c\u00f2n c\u00f3 th\u1ec3 tr\u1ecf c\u1ee5 th\u1ec3 ip, port,... v\u1edbi weight \u0111\u1ec3 \u01b0u ti\u00ean c\u00e2n b\u1eb1ng t\u1ea3i ... nh\u01b0 v\u00ed d\u1ee5 d\u01b0\u1edbi</p> <pre><code>## Dynamic configuration\nhttp:\n  services:\n    my-service:\n      loadBalancer:\n        servers:\n          - url: \"http://private-ip-server-1/\"\n            weight: 2\n          - url: \"http://private-ip-server-2/\"\n            weight: 1\n</code></pre>"},{"location":"traefik-index/#provider","title":"Provider","text":"<ul> <li>Ch\u00fang ta d\u00f9ng \u0111\u1ec3 ch\u1ec9 \u0111\u1ecbnh internal service d\u00f9ng c\u00e1i g\u00ec \u0111\u1ec3 ho\u1ea1t \u0111\u1ed9ng, nh\u01b0 Docker hay Swarm,... M\u1ee5c \u0111\u00edch c\u1ee7a vi\u1ec7c ch\u1ec9 \u0111\u1ecbnh Provider l\u00e0 \u0111\u1ec3 Traefik c\u00f3 th\u1ec3 nh\u1eadn d\u1ea1ng \u0111\u01b0\u1ee3c c\u1ea5u h\u00ecnh Dynamic Routing khi ta t\u1ea1o 1 container m\u1edbi, xo\u00e1 \u0111i hay c\u1eadp nh\u1eadt - \u0111\u00e2y l\u00e0 m\u1ed9t t\u00ednh n\u0103ng v\u01b0\u1ee3t tr\u1ed9i \u0111\u00e1ng \u0111\u1ec3 s\u1eed d\u1ee5ng Traefik - Dynamic Routing</li> <li>Docker: <code>--providers.docker=true</code></li> <li>Swarm: <code>\"--providers.swarm=true\"</code></li> <li>Kubenetes IngressRoute, Ingress, Gate\u01b0ay API: tui ch\u01b0a ti\u1ebfp x\u00fac n\u00ean t\u1ea1m \u0111\u1ec3 link \u0111\u00e2y h\u00e9 Kubenetes Provider</li> </ul>"},{"location":"traefik-index/#middleware","title":"Middleware","text":"<ul> <li>Ch\u00fang ta th\u01b0\u1eddng d\u00f9ng Middle \u0111\u1ec3 x\u00e1c th\u1ef1c, http redirect https, forwardAuth, Rate Limit </li> <li> <p>C\u00f3 2 lo\u1ea1i Middleware l\u00e0 HTTP v\u1edbi TCP, nh\u01b0ng \u1edf b\u00e0i vi\u1ebft n\u00e0y ch\u00fang ta ch\u1ec9 h\u01b0\u1edbng \u0111\u1ebfn HTTP </p> Middleware Purpose Area AddPrefix Adds a Path Prefix Path Modifier BasicAuth Adds Basic Authentication Security, Authentication Buffering Buffers the request/response Request Lifecycle Chain Combines multiple pieces of middleware Misc CircuitBreaker Prevents calling unhealthy services Request Lifecycle Compress Compresses the response Content Modifier ContentType Handles Content-Type auto-detection Misc DigestAuth Adds Digest Authentication Security, Authentication Errors Defines custom error pages Request Lifecycle ForwardAuth Delegates Authentication Security, Authentication Headers Adds / Updates headers Security IPAllowList Limits the allowed client IPs Security, Request lifecycle InFlightReq Limits the number of simultaneous connections Security, Request lifecycle PassTLSClientCert Adds Client Certificates in a Header Security RateLimit Limits the call frequency Security, Request lifecycle RedirectScheme Redirects based on scheme Request lifecycle RedirectRegex Redirects based on regex Request lifecycle ReplacePath Changes the path of the request Path Modifier ReplacePathRegex Changes the path of the request Path Modifier Retry Automatically retries in case of error Request lifecycle StripPrefix Changes the path of the request Path Modifier StripPrefixRegex Changes the path of the request Path Modifier </li> </ul> <p>Th\u00f4i l\u00ed thuy\u1ebft ngang ni th\u00f4i, d\u00e0i qu\u00e1 r\u1ed3i, u\u1ed1ng ly c\u00e0 ph\u00ea v\u00e0 ngh\u1ec9 kho\u1ebb \u0111\u1ec3 cu\u1ed1i tu\u1ea7n demo th\u1ef1c h\u00e0nh \u2615\ufe0f</p>"},{"location":"traefik-routing_loadbalancing/","title":"Traefik routing loadbalancing","text":""},{"location":"traefik-routing_loadbalancing/#tong-quan","title":"T\u1ed5ng quan","text":"<ul> <li>H\u00e3y c\u00f9ng qua s\u00e1t v\u1ec1 ki\u1ebfn tr\u00fac c\u1ee7a Traefik \u1edf h\u00ecnh b\u00ean d\u01b0\u1edbi</li> </ul> <ul> <li>\u0110\u1ea7u ti\u00ean, ch\u00fang ta s\u1ebd \u0111\u1ecbnh ngh\u0129a c\u00e1c entrypoint (entrypoint c\u00f3 th\u1ec3 h\u00ecnh dung nh\u01b0 c\u00e1i c\u1ed5ng \u0111i v\u00e0o, port m\u1ea5y m\u1ea5y nh\u01b0 80 ho\u1eb7c 433 bla bla)  C\u00e1c routers ph\u00e2n t\u00edch c\u00e1c request \u0111i v\u00e0o v\u00e0 \u0111\u1ed1i chi\u1ebfu v\u1edbi c\u00e1c rule \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a tr\u01b0\u1edbc, n\u00f3 s\u1ebd h\u1ecfi xem \"Request n\u00e0y d\u00f9ng host n\u00e0o, path l\u00e0 g\u00ec v\u00e0 header ra sao.  V\u00e0 chuy\u1ec3n ch\u00fang \u0111\u1ebfn c\u00e1c service y\u00eau c\u1ea7u. L\u01b0u \u00fd, n\u1ebfu Middlewares xu\u1ea5t hi\u1ec7n, n\u00f3 s\u1ebd n\u1eb1m gi\u1eefa v\u00e0 can thi\u1ec7p v\u00e0o gi\u1eefa routers v\u00e0 service, ch\u1eb3ng h\u1ea1n nh\u01b0 b\u1eaft ch\u00fang ta nh\u1eadp m\u1eadt kh\u1ea9u/ user tr\u01b0\u1edbc khi \u0111\u01b0\u1ee3c th\u00f4ng qua</li> </ul>"},{"location":"traefik-routing_loadbalancing/#nhiem-vu-cu-the-cua-cac-thanh-phan-co-the-trung-voi-concepts-nhu-oc-lai-cho-nho-he","title":"Nhi\u1ec7m v\u1ee5 c\u1ee5 th\u1ec3 c\u1ee7a c\u00e1c th\u00e0nh ph\u1ea7n (C\u00f3 th\u1ec3 tr\u00f9ng v\u1edbi concepts nh\u01b0 \u0111\u1ecdc l\u1ea1i cho nh\u1edb h\u00e9)","text":"<ol> <li>Providers: \u0111\u1ecbnh ngh\u0129a m\u1ea1ng m\u1ebdo, h\u1ea1 t\u1ea7ng ch\u00fang ta \u0111ang d\u00f9ng l\u00e0 g\u00ec: Docker? Swarm? K8s,..</li> <li>EntryPoints: l\u1eafng nghe traffic \u0111i v\u00e0o (port n\u00e0o ?)</li> <li>Router: ph\u00e2n t\u00edch request (host, path, headers, SSL,...?)</li> <li>Services: forward y\u00eau c\u1ea7u t\u1edbi service (loadbalacing hay server n\u00e0o \u0111\u00f3 ?)</li> <li>Middleware: update request ho\u1eb7c \u0111\u01b0a ra quy\u1ebft \u0111\u1ecbnh d\u1ef1a tr\u00ean request. D\u1ec5 hi\u1ec3u h\u01a1n th\u00ec n\u00f3 n\u1eb1m gi\u1eefa service v\u00e0 router: ch\u1eb7n l\u01b0u l\u01b0\u1ee3ng l\u1ea1i v\u00e0 h\u1ecfi: m\u00e0y l\u00e0 th\u00e8n n\u00e0o? \u0111\u1ee9a CCCD ra \u0111\u00e2y, header \u0111\u00e2u ? l\u00e1o nh\u00e1o l\u00e0 tau limit rate l\u1ea1i nh\u00e9, ki\u1ec3u v\u1eady =)))</li> </ol>"},{"location":"traefik-routing_loadbalancing/#entrypoints","title":"EntryPoints","text":"<ul> <li>N\u00f3 l\u00e0 c\u1eeda ng\u00f5 h\u1ee9ng l\u01b0u l\u01b0\u1ee3ng t\u1eeb ngo\u00e0i \u0111i v\u00e0o, l\u1eafng nghe l\u01b0u l\u01b0\u1ee3ng TCP/UDP, port bao nhi\u00eau</li> </ul>"},{"location":"traefik-routing_loadbalancing/#cau-hinh-mau","title":"C\u1ea5u h\u00ecnh m\u1eabu","text":"<pre><code>## Static configuration\n--entryPoints.web.address=:80\n--entryPoints.websecure.address=:443\n</code></pre> <ul> <li>\u1ede tr\u00ean 2 entrypoint \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a: web v\u00e0 websecure <p>C\u00f2n nhi\u1ec1u \u0111\u1ecbnh ngh\u0129a l\u1eafm m\u00e0 \u00edt d\u00f9ng, m\u1ecdi ng\u01b0\u1eddi mu\u1ed1n t\u00ecm hi\u1ec3u th\u00ec v\u00e0o docs ch\u00ednh ch\u1ee7 nhe Traefik Document - EntryPoint</p> </li> </ul>"},{"location":"traefik-routing_loadbalancing/#routers","title":"Routers","text":"<p> * M\u1ed9t router ch\u1ecbu tr\u00e1ch nhi\u1ec7m k\u1ebft n\u1ed1i request \u0111i v\u00e0o th\u00f4ng qua EntryPoint t\u1edbi service v\u00e0 g\u1ecdi middleware trung gian (n\u1ebfu c\u00f3) m\u00e0 ch\u00fang c\u00f3 th\u1ec3 handle ph\u1ee5 thu\u1ed9c v\u00e0o rule (host, path, ...) </p>"},{"location":"traefik-routing_loadbalancing/#cau-hinh-mau_1","title":"C\u1ea5u h\u00ecnh m\u1eabu","text":"<pre><code>## Static configuration\n- \"traefik.http.routers.traefik.rule=Rule_n\u00e0o_\u0111\u00f3('\u0110i\u1ec1u ki\u1ec7n')\n## - traefik.http.routers.traefik.rule=Host(`tanodd.hihi`) - router n\u00e0y nh\u1eadn host tanodd.hihi v\u00e0 forward ti\u1ebfp \n</code></pre> Rules Description Header(<code>key</code>, <code>value</code>) Matches requests containing a header named key set to value. HeaderRegexp(<code>key</code>, <code>regexp</code>) Matches requests containing a header named key matching regexp Host(<code>domain</code>) Matches requests host set to domain. HostRegexp(<code>regexp</code>) Matches requests host matching regexp. Method(<code>method</code>) Matches requests method set to method. Path(<code>path</code>) Matches requests path set to path. PathPrefix(<code>prefix</code>) Matches requests path prefix set to prefix. PathRegexp(<code>regexp</code>) Matches request path using regexp. Query(<code>key</code>, <code>value</code>) Matches requests query parameters named key set to value. QueryRegexp(<code>key</code>, <code>regexp</code>) Matches requests query parameters named key matching regexp. ClientIP(<code>ip</code>) Matches requests client IP using ip. It accepts IPv4, IPv6 and CIDR formats."},{"location":"traefik-routing_loadbalancing/#services","title":"Services","text":""},{"location":"traefik-routing_loadbalancing/#cau-hinh-mau_2","title":"C\u1ea5u h\u00ecnh m\u1eabu","text":"<pre><code> - \"traefik.http.services.traefik.loadbalancer.server.port=8080\"\n</code></pre> <p>Service n\u00e0y s\u1ebd forward l\u01b0u l\u01b0\u1ee3ng \u0111\u1ebfn port 8000 trong internal * Ngo\u00e0i ra, ta c\u00f2n c\u00f3 th\u1ec3 tr\u1ecf c\u1ee5 th\u1ec3 ip, port,... v\u1edbi weight \u0111\u1ec3 \u01b0u ti\u00ean c\u00e2n b\u1eb1ng t\u1ea3i ... nh\u01b0 v\u00ed d\u1ee5 d\u01b0\u1edbi</p> <pre><code>## Dynamic configuration\nhttp:\n  services:\n    my-service:\n      loadBalancer:\n        servers:\n          - url: \"http://private-ip-server-1/\"\n            weight: 2\n          - url: \"http://private-ip-server-2/\"\n            weight: 1\n</code></pre>"},{"location":"ubuntu/","title":"Cheatsheet","text":""},{"location":"ubuntu/#set-static-ip","title":"Set Static IP","text":""},{"location":"ubuntu/#with-old-version-ubuntu","title":"With Old version Ubuntu","text":"<pre><code>sudo nano /etc/netplan/01-netcfg.yaml\n\nedit content:\n#######################################\nnetwork:\n  version: 2\n  renderer: networkd\n  ethernets:\n    ens3:\n      dhcp4: no\n      addresses:\n        - 192.168.121.221/24\n      gateway4: 192.168.121.1\n      nameservers:\n          addresses: [8.8.8.8, 1.1.1.1]\n</code></pre>"},{"location":"ubuntu/#new-version-2204","title":"New version (&gt;=22.04)","text":"<pre><code>sudo apt install openvswitch-switch\n\nnetwork:\n  version: 2\n  renderer: networkd\n  ethernets:\n    eth0:\n      dhcp4: no\n      addresses:\n        - 192.168.0.10/24\n      routes:\n        - to: 0.0.0.0/0\n          via: 192.168.0.1\n      nameservers:\n          addresses: [8.8.8.8, 1.1.1.1]\n</code></pre>"},{"location":"ubuntu/#troubleshoot-dns","title":"Troubleshoot DNS","text":"<pre><code>sudo nano /etc/resolv.conf\n</code></pre>"},{"location":"ubuntu/#check-what-port-running-attach-with-what-service","title":"Check what port running attach with what service","text":"<pre><code>netstat -lntup\nsudo lsof -i -P -n\n</code></pre>"},{"location":"ubuntu/#check-driver-linux","title":"Check driver Linux","text":"<pre><code>lspci -v\n</code></pre>"},{"location":"ubuntu/#set-timezone-vietnam","title":"Set timezone Vietnam","text":"<pre><code>timedatectl set-timezone Asia/Ho_Chi Minh\n</code></pre>"},{"location":"ubuntu/#generate-random-password","title":"Generate Random Password","text":"<pre><code>openssl rand -base64 10\n</code></pre>"},{"location":"ubuntu/#user-manager","title":"User Manager","text":""},{"location":"ubuntu/#add-user","title":"Add User","text":"<pre><code>useradd name_user\nadduser name_user #detail about user\n</code></pre>"},{"location":"ubuntu/#switch-user","title":"Switch User","text":"<pre><code>su username\n</code></pre>"},{"location":"ubuntu/#delete","title":"Delete","text":"<pre><code>deluser username\n</code></pre>"},{"location":"ubuntu/#group-manager","title":"Group Manager","text":"<pre><code>groupadd\ndelgroup\nusermod -aG group_name username #Append List all Group\n#If not flag G, username will be delete on other group\n</code></pre>"},{"location":"ubuntu/#check-which-group-user-belong-to","title":"Check which group user belong to","text":"<pre><code>group username\n</code></pre>"},{"location":"ubuntu/#delete-user-from-group","title":"Delete user from group","text":"<pre><code>deluser username group\n</code></pre>"},{"location":"ubuntu/#privileges","title":"Privileges","text":"<pre><code>tan@ubuntu:~/mkdocs/tanodd.github.io$ ls -l\ntotal 16\ndrwxrwxrwx 4 root root 4096 Jan  3 06:37 docs\n-rwxrwxrwx 1 root root  971 Jan  3 06:38 mkdocs.yml\ndrwxrwxrwx 4 root root 4096 Jan  3 04:35 site\ndrwxrwxrwx 4 root root 4096 Dec 31 07:28 venv\n</code></pre> <p>First Root is owner, Second Root is group owner</p>"},{"location":"ubuntu/#change-owner","title":"Change owner","text":"<pre><code>chown root:tan docs/\n        |   |\n      user group\n</code></pre> <p>cat, less, head, tail </p>"},{"location":"blog/","title":"Blog","text":"<p>Hao ni ma ?</p>"}]}